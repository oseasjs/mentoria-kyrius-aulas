{"version":3,"sources":["components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/FixedPlugin/FixedPlugin.js","views/VideoPageView.js","views/SlackPageView.js","views/TrelloPageView.js","layouts/Admin/Admin.js","index.js","assets/img/react-logo.png","assets/img/anime3.png"],"names":["React","Component","AdminNavbar","Footer","ps","Sidebar","constructor","props","super","linkOnClick","document","documentElement","classList","remove","renderIcon","_prop","className","icon","this","activeRoute","bind","routeName","location","pathname","indexOf","componentDidMount","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","componentWillUnmount","destroy","render","bgColor","routes","logo","rtlActive","logoImg","logoText","undefined","outterLink","href","onClick","toggleSidebar","src","imgSrc","alt","text","to","innerLink","data","ref","Nav","map","prop","key","redirect","path","pro","layout","activeClassName","name","style","target","defaultProps","Admin","hist","createBrowserHistory","ReactDOM","history","from","getElementById","module","exports"],"mappings":"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","file":"static/js/main.08160734.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\n                    <i className=\"tim-icons icon-sound-wave\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  {/*\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Mike John responded to your email\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        You have 5 more tasks\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Your friend Michael is in town\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another notification\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another one\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                  */}\n                </UncontrolledDropdown>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\nimport { SiLinkedin, SiMedium, SiGithub, SiReact, SiNodeDotJs, SiGithubactions } from 'react-icons/si';\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            <NavItem>\n              <NavLink href=\"https://reactjs.org/\" target=\"_blank\"><SiReact /></NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://nodejs.org\" target=\"_blank\"><SiNodeDotJs /></NavLink>              \n            </NavItem>            \n            <NavItem>\n              <NavLink href=\"https://pages.github.com/\" target=\"_blank\"><SiGithubactions /></NavLink>              \n            </NavItem>            \n          </Nav>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\": \"}\n            <a\n              href=\"https://www.linkedin.com/company/kyrius-mentoria\"\n              target=\"_blank\"\n            >\n              Mentoria | Kyrius\n            </a>{\" \"}            \n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\n\nimport { SiLinkedin, SiGithub, SiMedium, SiTrello, SiSlack } from 'react-icons/si';\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  renderIcon = (_prop) => {\n\n    // console.log('### renderIcon');\n\n    return (<i className={\"\"+_prop.icon+\"\"} />);\n\n\n    // if (_prop.reactIcon) {\n\n    //   if (_prop.reactIcon === 'trello') {\n    //     return (<SiTrello />);\n    //   }\n    //   if (_prop.reactIcon === 'slack') {\n    //     return (<SiSlack />);\n    //   }\n\n    //   return null;\n      \n    // }\n    // else {\n    //   return (_prop.reactIcon);\n    // }\n\n  }\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            \n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    {\n                      prop.icon === 'slack' ? <i><SiSlack /></i> : prop.icon === 'trello' ? <i><SiTrello /></i> : <i className={prop.icon} />\n                    }\n                    \n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n\n            <li className=\"active-pro\" style={{\"fontSize\":\"1.5rem\"}}>\n              <div style={{\"marginLeft\": \"15px\", \"width\": \"90%\"}}>\n                <div style={{\"float\": \"left\", \"marginRight\": \"15px\"}}>\n                  <a href=\"https://www.linkedin.com/company/kyrius-mentoria\" \n                    target=\"_blank\"\n                    style={{\"color\":\"white\"}}>\n                    <SiLinkedin />\n                  </a>\n                </div>\n                <div style={{\"float\": \"left\", \"marginRight\": \"15px\"}}>\n                  <a href=\"https://github.com/oseasjs/kyrius\" \n                    target=\"_blank\"\n                    style={{\"color\":\"white\"}}>\n                    <SiGithub />\n                  </a>\n                </div>\n                <div>\n                  <a href=\"https://medium.com/@oseasjs/mentoria-desenvolvedor-java-parte-1-9f2b58e51aaa\" \n                    target=\"_blank\"\n                    style={{\"color\":\"white\"}}>\n                    <SiMedium />\n                  </a>\n                </div>\n              </div>              \n            </li>\n                        \n          </Nav>          \n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\n// reactstrap components\nimport { Button } from \"reactstrap\";\n\nclass FixedPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: \"dropdown show-dropdown\"\n    };\n  }\n  handleClick = () => {\n    if (this.state.classes === \"dropdown show-dropdown\") {\n      this.setState({ classes: \"dropdown show-dropdown show\" });\n    } else {\n      this.setState({ classes: \"dropdown show-dropdown\" });\n    }\n  };\n  activateMode = mode => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className={this.state.classes}>\n          <div onClick={this.handleClick}>\n            <i className=\"fa fa-cog fa-2x\" />\n          </div>\n          <ul className=\"dropdown-menu show\">\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n            <li className=\"adjustments-line\">\n              <div className=\"badge-colors text-center\">\n                <span\n                  className={\n                    this.props.bgColor === \"primary\"\n                      ? \"badge filter badge-primary active\"\n                      : \"badge filter badge-primary\"\n                  }\n                  data-color=\"primary\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"primary\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"blue\"\n                      ? \"badge filter badge-info active\"\n                      : \"badge filter badge-info\"\n                  }\n                  data-color=\"blue\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"blue\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"green\"\n                      ? \"badge filter badge-success active\"\n                      : \"badge filter badge-success\"\n                  }\n                  data-color=\"green\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"green\");\n                  }}\n                />{\" \"}\n              </div>\n            </li>\n            <li className=\"adjustments-line text-center color-change\">\n              <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n              <span\n                className=\"badge light-badge mr-2\"\n                onClick={() => this.activateMode(\"light\")}\n              />{\" \"}\n              <span\n                className=\"badge dark-badge ml-2\"\n                onClick={() => this.activateMode(\"dark\")}\n              />{\" \"}\n              <span className=\"color-label\">DARK MODE</span>{\" \"}\n            </li>\n            <li className=\"button-container\">\n              <Button\n                href=\"https://www.creative-tim.com/product/black-dashboard-react\"\n                color=\"primary\"\n                block\n                className=\"btn-round\"\n              >\n                Download Now\n              </Button>\n              <Button\n                color=\"default\"\n                block\n                className=\"btn-round\"\n                outline\n                href=\"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\n              >\n                Documentation\n              </Button>\n            </li>\n            <li className=\"header-title\">Want more components?</li>\n            <li className=\"button-container\">\n              <Button\n                href=\"https://www.creative-tim.com/product/black-dashboard-pro-react\"\n                className=\"btn-round\"\n                disabled\n                block\n                color=\"danger\"\n              >\n                Get pro version\n              </Button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedPlugin;\n","import React from \"react\";\nimport YoutubeModal from \"react-youtube-modal\";\nimport { SiMedium, SiSlack, SiYoutube } from 'react-icons/si';\nimport axios from \"axios\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  CardHeader,\n  CardTitle,  \n} from \"reactstrap\";\n\nclass VideoPageView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { jsonClassContent: {items: []}, teste: 'teste', show: false, selectedJsonVideo: {}};\n  }\n\n  async componentDidMount() {\n    await this.getJsonClassContent(); \n  }\n\n  getJsonClassContent = async () => {\n    \n    const jsonFileName = this.props.location.pathname.split('/admin/')[1];\n    const url = '/mentoria-kyrius-aulas/jsons/' + jsonFileName + '.json';\n\n    await axios.get(url)\n      .then( response => { \n        this.setState({jsonClassContent: response.data});\n    }) \n    .catch(function (error) { \n      console.log(error); \n    });\n\n  }\n\n  renderRow(json) {\n    if (json.type === 'video') {\n      return this.renderVideo(json);\n    }\n    if (json.type === 'text') {\n      return this.renderText(json);\n    }\n  }\n\n  renderVideo(jsonVideoContent) {\n    return (\n      <Row>\n          <Col md=\"2\">\n            <Card className=\"card-user\">\n              <CardBody>\n                <div className=\"author\">\n                  <div className=\"block block-one\" />\n                  <div className=\"block block-two\" />\n                  <div className=\"block block-three\" />\n                  <div className=\"block block-four\" />\n                  <a href={jsonVideoContent.channelUrl} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\">\n                    <img\n                      alt=\"...\"\n                      className=\"avatar\"\n                      src={jsonVideoContent.avatarUrl}\n                    />                      \n                  </a>\n                  <h5 className=\"title\">                    \n                    <a href={jsonVideoContent.channelUrl} \n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{\"font-weight\": \"normal\"}}>\n                      Canal: {jsonVideoContent.channelName}\n                    </a>      \n                  </h5>\n                  <YoutubeModal videoId={jsonVideoContent.id} height=\"520\" width=\"60%\">\n                    <div className=\"card-youtube-video\">\n                      {this.renderIcon(jsonVideoContent)}\n                    </div>\n                  </YoutubeModal>\n                </div>                \n              </CardBody>\n            </Card>\n          </Col>\n          <Col>\n            <Card className=\"card-user\">\n              <CardBody>\n\n                <h5 className=\"card-video-title\" >\n                  <span className=\"card-video-title-span\">{jsonVideoContent.title}</span>\n                </h5>\n                \n                <div className=\"card-description\">\n                  {jsonVideoContent.descriptionCheckList.map((d) => {\n                    return (\n                      <p>\n                        <i className=\"tim-icons icon-check-2\" />\n                        {d.description}\n                      </p>\n                    )\n                  })}                        \n                </div>\n                <br/>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"2\">\n            <Card className=\"card-user\" >\n              <CardBody style={{\"text-align\": \"center\"}}>\n                <div >\n                  <i className=\"tim-icons icon-time-alarm\" \n                    style={{\"font-size\": \"2.5rem\", \"margin-top\": \"20px\"}}/>\n                </div>\n                <div className=\"card-duration\">\n                  \n                    Tempo {': ' + jsonVideoContent.duration}\n                  \n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n    )\n  }\n\n  renderIcon(jsonContent) {\n\n    if (jsonContent.iconType === 'slack') {\n      return (<SiSlack/>);\n    }\n    else if (jsonContent.iconType === 'medium') {\n      return (<SiMedium/>);\n    }\n    else if (jsonContent.iconType === 'youtube') {\n      return (<SiYoutube/>);\n    }\n    else {\n      return \"\";\n    }\n\n  }\n\n  renderText(jsonTextContent) {\n    return (\n      <Row>\n        <Col md=\"2\">\n          <Card className=\"card-user\" >\n            <CardBody>\n              <div className=\"author\">\n                <div className=\"block block-one\" />\n                <div className=\"block block-two\" />\n                <div className=\"block block-three\" />\n                <div className=\"block block-four\" />\n                <a href=\"#\" onClick={e => e.preventDefault()}>\n                  <img\n                    alt=\"...\"\n                    className=\"avatar\"\n                    src={jsonTextContent.avatarUrl}\n                  />                      \n                </a>\n                <h5 className=\"title\">\n\n                  <a href={jsonTextContent.channelUrl} \n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{\"font-weight\": \"normal\"}}>\n                    Canal: {jsonTextContent.channelName}\n                  </a>\n                                    \n                </h5>   \n                <a href={jsonTextContent.channelUrl} \n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{\"font-size\": \"2.5rem\"}}>\n                    {this.renderIcon(jsonTextContent)}\n                </a>\n                                             \n              </div>\n              <div className=\"card-description\">\n                \n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col>\n          <Card className=\"card-user\" >\n            <CardBody>\n\n              <h5 className=\"card-video-title\" style={{\"font-size\": \"1.2rem\"}}>\n                <span className=\"card-video-title-span\">{jsonTextContent.title}</span>\n              </h5>  \n\n              <div >\n                <h5>\n                  {jsonTextContent.descriptionCheckList.map((d) => {\n                      return (\n                        <div style={{\"margin-left\":\"20px\", \"margin-top\": \"20px\"}}>\n                          {d.description}\n                          <br/>\n                        </div>\n                      )\n                    })}  \n                </h5>\n              </div>\n              \n            </CardBody>\n          </Card>\n        </Col>\n        <Col md=\"2\">\n            <Card className=\"card-user\" >\n              <CardBody style={{\"text-align\": \"center\"}}>\n                <div >\n                  <i className=\"tim-icons icon-time-alarm\" \n                    style={{\"font-size\": \"2.5rem\", \"margin-top\": \"20px\"}}/>\n                </div>\n                <div className=\"card-description\">\n                  <span>\n                    Tempo {': ' + jsonTextContent.duration}\n                  </span>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n      </Row>\n    )\n  }\n\n  render() {\n    \n    return (\n      \n      <>      \n\n        <div className=\"content\">\n\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">{this.state.jsonClassContent.title}</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  {this.state.jsonClassContent.description}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          {this.state.jsonClassContent.items.map((json) => {\n            return (this.renderRow(json))\n          })}\n\n        </div>       \n\n      </>\n\n    );\n\n  }\n\n}\n\nexport default VideoPageView;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { SiSlack } from \"react-icons/si\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass SlackPageView extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col>\n              <Card>\n                <CardBody>\n                  <img src=\"/mentoria-kyrius-aulas/slack.png\" alt=\"Slack da Mentoria\" />\n                </CardBody>                \n              </Card>\n            </Col>\n            <Col md=\"3\">\n              <Card className=\"card-user\">\n                <CardBody>\n                  \n                  <div className=\"author\">\n                    <div className=\"block block-one\" />\n                    <div className=\"block block-two\" />\n                    <div className=\"block block-three\" />\n                    <div className=\"block block-four\" />\n                    <a href=\"#\" onClick={e => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"avatar\"\n                        src=\"/mentoria-kyrius-aulas/yoda.png\"\n                      />                      \n                    </a>\n                    <h5 className=\"title\">\n                      <span>Slack: Kyrius</span>\n                      <br/>\n                      <br/>\n                      <a href=\"https://join.slack.com/t/kyrius/shared_invite/enQtOTY2NDQ2NjI3ODk1LTMzZDRhZTRkMTliMDg4YzViODU1NTFlOTBiODk3MTM3MzU5YTI0MmZhODE5MmNhMTgyN2EyNmU2OGU0OTFkYmQ\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{\"font-size\": \"2.5rem\"}}>\n                          <SiSlack />\n                      </a>\n                    </h5>   \n                    <h5 className=\"card-video-title\" style={{\"font-size\": \"1.2rem\"}}>\n                      <a href=\"https://join.slack.com/t/kyrius/shared_invite/enQtOTY2NDQ2NjI3ODk1LTMzZDRhZTRkMTliMDg4YzViODU1NTFlOTBiODk3MTM3MzU5YTI0MmZhODE5MmNhMTgyN2EyNmU2OGU0OTFkYmQ\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{\"font-size\": \"2.5rem\", \"color\": \"white\"}}>\n                        <span className=\"card-video-title-span\">Entrar no Slack da Mentoria</span>\n                      </a>                    \n                    </h5>               \n                  </div>\n                  <div className=\"card-description\">\n                    \n                  </div>\n                </CardBody>                \n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SlackPageView;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { SiTrello } from \"react-icons/si\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass TrelloPageView extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col>\n              <Card>\n                <CardBody>\n                  <img src=\"/mentoria-kyrius-aulas/trello.png\" alt=\"Trello da Mentoria\" />\n                </CardBody>                \n              </Card>\n            </Col>\n            <Col md=\"3\">\n              <Card className=\"card-user\">\n                <CardBody>\n                  \n                  <div className=\"author\">\n                    <div className=\"block block-one\" />\n                    <div className=\"block block-two\" />\n                    <div className=\"block block-three\" />\n                    <div className=\"block block-four\" />\n                    <a href=\"#\" onClick={e => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"avatar\"\n                        src=\"/mentoria-kyrius-aulas/yoda.png\"\n                      />                      \n                    </a>\n                    <h5 className=\"title\">\n                      \n                      <span>Trello: Kyrius</span>\n                      <br/>\n                      <br/>\n                      \n                      <a href=\"https://trello.com/b/R1wOBbVP/kyrius\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{\"font-size\": \"2.5rem\", \"color\": \"#094c72\"}}>\n                          <SiTrello />\n                      </a>\n                    </h5>   \n                    <h5 className=\"card-video-title\" style={{\"font-size\": \"1.2rem\"}}>\n                      <a href=\"https://trello.com/b/R1wOBbVP/kyrius\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{\"font-size\": \"2.5rem\", \"color\": \"white\"}}>\n                        <span className=\"card-video-title-span\">Entrar no Trello da Mentoria</span>\n                      </a>                    \n                    </h5>               \n                  </div>\n                  <div className=\"card-description\">\n                    \n                  </div>\n                  \n                </CardBody>                \n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TrelloPageView;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    console.log('### Init getRoutes');\n    \n    console.log(routes);\n    routes.map((prop, key) => {\n      console.log(prop);\n      console.log(key);\n    });\n    \n    console.log('### End getRoutes');\n\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/mentoria-kyrius-aulas/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"/mentoria-kyrius-aulas\",\n              text: \"Kyrius\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}              \n              <Redirect from=\"/\" to=\"/mentoria-kyrius-aulas/admin/slack\"/> \n              {/* <Redirect from=\"*\" to=\"/mentoria-kyrius-aulas/admin/slack\"/>  */}\n            </Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist} >\n    <Switch>\n      \n      <Redirect from=\"/\" to=\"/mentoria-kyrius-aulas/admin/trello\" />\n\n      {/*\n      <Route path=\"/mentoria-kyrius-aulas/*\" render={props => <AdminLayout {...props} />} /> \n      <Redirect from=\"/\" to=\"/mentoria-kyrius-aulas/admin/environment\" />\n      <Redirect from=\"/admin/java\" to=\"/mentoria-kyrius-aulas/admin/java\" />\n      <Route path=\"/mentoria-kyrius-aulas/admin/beginning\" render={props => <AdminLayout {...props} />} />\n      */}\n      \n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";"],"sourceRoot":""}